services:
  otel-collector:
      image: otel/opentelemetry-collector-contrib:0.109.0 
      command: ["--config=/etc/otel-collector-config.yaml"]
      volumes:
        - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
      ports:
        - "4317:4317"  # OTLP gRPC (for API to send data)
        - "4318:4318"  # OTLP HTTP (alternative)
        - "8889:8889"  # Prometheus exporter
      depends_on:
        - loki
        - tempo
        - prometheus
      deploy:
        resources:
          limits:
            cpus: '1'
            memory: 512M
      networks:
        - observability-network
      restart: unless-stopped
  grafana:
    image: grafana/grafana:10.3.1  # Use a specific version
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      # Disable anonymous access
      - GF_AUTH_ANONYMOUS_ENABLED=false
      # Enable authentication
      - GF_AUTH_BASIC_ENABLED=true
      # Configure session security
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_COOKIE_SECURE=true
      - GF_SERVER_COOKIE_SAMESITE=strict
      # Limit login attempts
      - GF_AUTH_BASIC_LOGIN_ATTEMPTS=5
      - GF_AUTH_BASIC_LOGIN_ATTEMPT_LOCKOUT_TIME=5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    networks:
      - observability-network
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
      - loki-data:/loki
    command: 
      - -config.file=/etc/loki/config.yaml
      - -log.level=warn
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    networks:
      - observability-network
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - /var/log:/var/log
      # Limit log collection to specific paths
      - /var/log/your-app:/var/log/your-app
    command: 
      - -config.file=/etc/promtail/config.yaml
      - -log.level=warn
    deploy:
      mode: global  # Ensures one container per node
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - observability-network
    restart: unless-stopped

  tempo:
    image: grafana/tempo:2.3.1
    command: 
      - -config.file=/etc/tempo/tempo.yaml
    volumes:
      - ./tempo-config.yaml:/etc/tempo/tempo.yaml
      - tempo-data:/data
    ports:
      - "3200:3200"   # Tempo Query
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    networks:
      - observability-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.50.1
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.enable-admin-api
      # Retention: keep 15 days of data, 512MB max
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.retention.size=512MB
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    networks:
      - observability-network
    restart: unless-stopped

volumes:
  grafana-data:
    driver: local
  loki-data:
    driver: local
  tempo-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  observability-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.default_bridge: "false"
      com.docker.network.bridge.enable_ip_masquerade: "true"
